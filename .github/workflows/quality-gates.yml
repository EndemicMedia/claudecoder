name: Quality Gates
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - 'main'

# Cancel in-progress runs on new pushes to same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  mandatory-tests:
    name: "Mandatory Quality Gates"
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      # Core test suite - MUST PASS
      - name: 🧪 Run comprehensive test suite
        run: npm run test:all
        
      - name: 📊 Verify coverage thresholds (80% minimum)
        run: npm run test:coverage
      
      - name: 🏗️ Verify build integrity
        run: |
          npm run build
          if [ ! -f "dist/index.js" ]; then
            echo "❌ Build failed: dist/index.js not found"
            exit 1
          fi
          echo "✅ Build verification passed"
      
      # Model configuration tests - Claude 4 support
      - name: 🤖 Test Claude 4 model configurations
        run: |
          echo "Testing latest Claude 4 models..."
          MODELS="us.anthropic.claude-sonnet-4-20250514-v1:0,moonshotai/kimi-k2:free" npm test -- --testNamePattern="ModelSelector"
          
      - name: 🛡️ Test authorization error handling
        run: |
          echo "Testing authorization error handling and fallback..."
          npm test -- --testNamePattern="should handle authorization errors"
          
      - name: 🔄 Test FallbackManager reliability
        run: |
          echo "Testing FallbackManager with various error scenarios..."
          npm test -- --testNamePattern="FallbackManager"

      - name: 🌐 Test cross-provider configurations
        run: |
          echo "Testing mixed provider scenarios..."
          MODELS="us.anthropic.claude-opus-4-1-20250805-v1:0,google/gemini-2.0-flash-exp:free" npm test -- --testNamePattern="should handle multiple model failures"

  security-checks:
    name: "Security & Code Quality"
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: 🔒 Check for credentials in code
        run: |
          echo "Scanning for potential credentials..."
          if grep -r "sk-\|AKIA\|aws_access_key_id" . --exclude-dir=node_modules --exclude-dir=.git --exclude="*.lock" --exclude=".env.example" | grep -v "your_" | grep -v "test" | grep -v "_here"; then
            echo "❌ Potential credentials found in code!"
            exit 1
          fi
          echo "✅ No credentials found in code"
          
      - name: 🔍 Lint and code quality checks
        run: |
          echo "Running code quality checks..."
          # Add your linting commands here when you have them set up
          # npm run lint
          echo "✅ Code quality checks passed"
          
  documentation-checks:
    name: "Documentation & Examples"
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
      
      - name: 📚 Verify documentation examples
        run: |
          echo "Checking documentation examples..."
          # Verify README examples are valid YAML
          if ! grep -q "us.anthropic.claude-sonnet-4-20250514-v1:0" README.md; then
            echo "❌ Latest model examples missing from README"
            exit 1
          fi
          echo "✅ Documentation examples verified"
          
      - name: 🔧 Verify .env.example is current
        run: |
          echo "Checking .env.example completeness..."
          if [ ! -f ".env.example" ]; then
            echo "❌ .env.example missing"
            exit 1
          fi
          if ! grep -q "AWS_LATEST_MODELS" .env.example; then
            echo "❌ .env.example missing latest model configurations"
            exit 1
          fi
          echo "✅ .env.example is current"

  # This job will be used by branch protection rules
  quality-gates-passed:
    name: "All Quality Gates Passed"
    runs-on: ubuntu-latest
    needs: [mandatory-tests, security-checks, documentation-checks]
    if: github.event.pull_request.draft == false
    steps:
      - name: ✅ Quality gates completed
        run: |
          echo "🎉 All quality gates have passed!"
          echo "✅ Comprehensive tests: PASSED"
          echo "✅ Coverage thresholds: PASSED" 
          echo "✅ Build integrity: PASSED"
          echo "✅ Model configurations: PASSED"
          echo "✅ Security checks: PASSED"
          echo "✅ Documentation: PASSED"
          echo ""
          echo "🚀 This PR is ready for review and merge!"